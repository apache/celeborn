{{- /*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/ -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "celeborn.worker.statefulSet.name" . }}
  labels:
    {{- include "celeborn.worker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      {{- include "celeborn.worker.selectorLabels" . | nindent 6 }}
  {{- with .Values.worker.volumeClaimTemplates }}
  volumeClaimTemplates:
  {{- toYaml . | nindent 2 }}
  {{- end }}
  serviceName: {{ include "celeborn.worker.service.name" . }}
  template:
    metadata:
      labels:
        {{- include "celeborn.worker.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/tag: {{ .Values.image.tag | quote }}
      {{- with .Values.worker.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- /* Add an init container to chown mount paths of Celeborn workers volume if necessary. */}}
      {{- $paths := list }}
      {{- range $volumeMount := .Values.worker.volumeMounts }}
      {{- range $volume := $.Values.worker.volumes }}
      {{- if eq $volume.name $volumeMount.name }}
      {{- if or $volume.hostPath $volume.emptyDir }}
      {{- $paths = append $paths $volumeMount.mountPath }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if $paths }}
      initContainers:
      - name: chown-celeborn-worker-volume
        image: {{ include "celeborn.image" . }}
        {{- with .Values.image.pullPolicy }}
        imagePullPolicy: {{ . }}
        {{- end }}
        command:
        - chown
        - -R
        - {{ .Values.worker.podSecurityContext.runAsUser | default 10006 }}:{{ .Values.worker.podSecurityContext.runAsGroup | default 10006 }}
        {{- range $path := $paths }}
        - {{ $path }}
        {{- end }}
        {{- with .Values.worker.volumeMounts }}
        volumeMounts:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.worker.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          runAsUser: 0
        {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "celeborn.image" . }}
        {{- with .Values.image.pullPolicy }}
        imagePullPolicy: {{ . }}
        {{- end }}
        command:
        - /usr/bin/tini
        - --
        - /bin/sh
        - -c
        {{- $namespace := .Release.Namespace }}
        - >
          until {{ range until (.Values.master.replicas | int) }}
          nslookup {{ include "celeborn.master.statefulSet.name" $ }}-{{ . }}.{{ include "celeborn.master.service.name" $ }}.{{ $namespace }}.svc.{{ $.Values.cluster.name }}.local && 
          {{- end }}
          true; do
            echo "waiting for master";
            sleep 2;
          done && exec /opt/celeborn/sbin/start-worker.sh
        ports:
        - containerPort: {{ get .Values.celeborn "celeborn.worker.http.port" | default 9096 }}
          name: metrics
          protocol: TCP
        {{- with .Values.worker.env }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.worker.envFrom }}
        envFrom:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: celeborn-conf
          subPath: celeborn-defaults.conf
          mountPath: /opt/celeborn/conf/celeborn-defaults.conf
        - name: celeborn-conf
          subPath: log4j2.xml
          mountPath: /opt/celeborn/conf/log4j2.xml
        - name: celeborn-conf
          subPath: metrics.properties
          mountPath: /opt/celeborn/conf/metrics.properties
        {{- with .Values.worker.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.worker.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.worker.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: celeborn-conf
        configMap:
          name: {{ include "celeborn.configMapName" . }}
          defaultMode: 0444
          items:
          - key: celeborn-defaults.conf
            path: celeborn-defaults.conf
          - key: log4j2.xml
            path: log4j2.xml
          - key: metrics.properties
            path: metrics.properties
      {{- with .Values.worker.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.worker.priorityClass.name .Values.worker.priorityClass.create }}
      priorityClassName: {{ include "celeborn.worker.priorityClass.name" . }}
      {{- end }}
      {{- with .Values.worker.dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with .Values.worker.hostNetwork }}
      hostNetwork: {{ . }}
      {{- end }}
      serviceAccountName:  {{ include "celeborn.serviceAccountName" . }}
      {{- with .Values.worker.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
